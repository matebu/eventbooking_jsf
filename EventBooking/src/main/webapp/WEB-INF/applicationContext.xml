<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
				http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
				http://www.springframework.org/schema/tx 
		        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		        http://www.springframework.org/schema/context 
		        http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<context:component-scan base-package="com.ebooking" />
	<context:annotation-config />
	<context:spring-configured />

	<!-- Beans Declaration -->
	<bean id="User" class="com.ebooking.model.User" />
	<bean id="UserRole" class="com.ebooking.model.UserRole" />
	<bean id="Event" class="com.ebooking.model.Event" />
	<bean id="Ticket" class="com.ebooking.model.Ticket" />

	<!-- Service Declarations -->
	<bean id="UserService" class="com.ebooking.service.UserService">
		<property name="userDAO" ref="UserDAO" />
	</bean>
	<bean id="EventService" class="com.ebooking.service.EventService">
		<property name="eventDAO" ref="EventDAO" />
	</bean>
	<bean id="TicketService" class="com.ebooking.service.TicketService">
		<property name="ticketDAO" ref="TicketDAO" />
	</bean>
	<bean id="customUserDetailsService" class="com.ebooking.service.CustomUserDetailsService">
		<property name="userDAO" ref="UserDAO" />
	</bean>

	<!-- DAO Declarations -->
	<bean id="UserDAO" class="com.ebooking.dao.UserDAO">
		<property name="sessionFactory" ref="SessionFactory" />
	</bean>
	<bean id="EventDAO" class="com.ebooking.dao.EventDAO">
		<property name="sessionFactory" ref="SessionFactory" />
	</bean>
	<bean id="TicketDAO" class="com.ebooking.dao.TicketDAO">
		<property name="sessionFactory" ref="SessionFactory" />
	</bean>

	<!-- Data Source Declaration -->
	<bean id="DataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		lazy-init="true">
		<property name="driverClassName" value="org.postgresql.Driver" />
		<property name="url"
			value="jdbc:postgresql://localhost:5432/postgres?characterEncoding=utf-8" />
		<property name="username" value="postgres" />
		<property name="password" value="choerchowh" />
	</bean>

	<!-- Session Factory Declaration -->
	<bean id="SessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="DataSource" />
		<property name="annotatedClasses">
			<list>
				<value>com.ebooking.model.User</value>
				<value>com.ebooking.model.UserRole</value>
				<value>com.ebooking.model.Event</value>
				<value>com.ebooking.model.Ticket</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
				<prop key="hibernate.default_schema">jsfdb</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.generate_statistics">false</prop>
			</props>
		</property>
	</bean>

	<!-- Enable the configuration of transactional behavior based on annotations -->
	<tx:annotation-driven transaction-manager="txManager" />

	<!-- Transaction Manager is defined -->
	<bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="SessionFactory" />
	</bean>

</beans>
